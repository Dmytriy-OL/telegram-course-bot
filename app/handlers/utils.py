from aiogram.types import Message, FSInputFile
from app.database.crud import get_images_with_main
from app.images import BASE_DIR
# from app.image_uploads import BASE_DIR
from aiogram.types import CallbackQuery

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import os

async def display_images(message: Message, text: str = '–ü–µ—Ä–µ–¥–∞–π —Ç–µ–∫—Å—Ç', send_photos: bool = False):
    images, image = await get_images_with_main()
    if images:
        await message.answer("–í—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö:")
        for index, img in enumerate(images, start=1):
            caption = f"–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è #{index}: `{img.filename}`"
            if img == image:
                caption += " - –°—Ç–æ—ó—Ç—å –Ω–∞ –∑–∞—Å—Ç–∞–≤—Ü—ñ"

            if send_photos:
                photo_path = os.path.join(BASE_DIR, img.filename)
                photo = FSInputFile(photo_path)
                await message.answer_photo(photo=photo, caption=caption)
            else:
                await message.answer(text=caption, parse_mode="Markdown")
        await message.answer(text)
    else:
        await message.answer("‚ùå –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")






# @router.callback_query(F.data == "button1")
# async def process_button1(callback: types.CallbackQuery):
#     await callback.message.answer("‚è≥ –û–±—Ä–æ–±–ª—è—î–º–æ –≤–∞—à –∑–∞–ø–∏—Å...")
#     await asyncio.sleep(1)
#     await callback.message.answer("‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ñ! üéâ")

    # await callback.message.answer("üóì –í–∏–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å, –Ω–∞ —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç–∏—Å—è:", reply_markup=get_days_keyboard())